// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PickContentRelationshipFieldData<
  TRelationship extends
    | prismic.CustomTypeModelFetchCustomTypeLevel1
    | prismic.CustomTypeModelFetchCustomTypeLevel2
    | prismic.CustomTypeModelFetchGroupLevel1
    | prismic.CustomTypeModelFetchGroupLevel2,
  TData extends Record<
    string,
    | prismic.AnyRegularField
    | prismic.GroupField
    | prismic.NestedGroupField
    | prismic.SliceZone
  >,
  TLang extends string,
> =
  // Content relationship fields
  {
    [TSubRelationship in Extract<
      TRelationship["fields"][number],
      prismic.CustomTypeModelFetchContentRelationshipLevel1
    > as TSubRelationship["id"]]: ContentRelationshipFieldWithData<
      TSubRelationship["customtypes"],
      TLang
    >;
  } & // Group
  {
    [TGroup in Extract<
      TRelationship["fields"][number],
      | prismic.CustomTypeModelFetchGroupLevel1
      | prismic.CustomTypeModelFetchGroupLevel2
    > as TGroup["id"]]: TData[TGroup["id"]] extends prismic.GroupField<
      infer TGroupData
    >
      ? prismic.GroupField<
          PickContentRelationshipFieldData<TGroup, TGroupData, TLang>
        >
      : never;
  } & // Other fields
  {
    [TFieldKey in Extract<
      TRelationship["fields"][number],
      string
    >]: TFieldKey extends keyof TData ? TData[TFieldKey] : never;
  };

type ContentRelationshipFieldWithData<
  TCustomType extends
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel1 | string)[]
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel2 | string)[],
  TLang extends string = string,
> = {
  [ID in Exclude<
    TCustomType[number],
    string
  >["id"]]: prismic.ContentRelationshipField<
    ID,
    TLang,
    PickContentRelationshipFieldData<
      Extract<TCustomType[number], { id: ID }>,
      Extract<prismic.Content.AllDocumentTypes, { type: ID }>["data"],
      TLang
    >
  >;
}[Exclude<TCustomType[number], string>["id"]];

type PageDocumentDataSlicesSlice = CtaSlice | HeroSlice;

/**
 * Item in *Page → (Navbar) Links*
 */
export interface PageDocumentDataNavbarLinksItem {
  /**
   * Text Links field in *Page → (Navbar) Links*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: page.navbar_links[].text_links
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  text_links: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * Item in *Page → (Navbar) Buttons*
 */
export interface PageDocumentDataNavbarButtonsItem {
  /**
   * Buttons field in *Page → (Navbar) Buttons*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: page.navbar_buttons[].buttons
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  buttons: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;
}

/**
 * Content for Page documents
 */
interface PageDocumentData {
  /**
   * Website Name field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: page.website_name
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  website_name: prismic.KeyTextField;

  /**
   * Slice Zone field in *Page*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: page.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/slices
   */
  slices: prismic.SliceZone<PageDocumentDataSlicesSlice> /**
   * Logo field in *Page*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: page.logo
   * - **Tab**: Global Styles
   * - **Documentation**: https://prismic.io/docs/fields/image
   */;
  logo: prismic.ImageField<never>;

  /**
   * Background Color field in *Page*
   *
   * - **Field Type**: Color
   * - **Placeholder**: *None*
   * - **API ID Path**: page.background_color
   * - **Tab**: Global Styles
   * - **Documentation**: https://prismic.io/docs/fields/color
   */
  background_color: prismic.ColorField;

  /**
   * Brand Color field in *Page*
   *
   * - **Field Type**: Color
   * - **Placeholder**: *None*
   * - **API ID Path**: page.brand_color
   * - **Tab**: Global Styles
   * - **Documentation**: https://prismic.io/docs/fields/color
   */
  brand_color: prismic.ColorField;

  /**
   * Text Color field in *Page*
   *
   * - **Field Type**: Color
   * - **Placeholder**: *None*
   * - **API ID Path**: page.text_color
   * - **Tab**: Global Styles
   * - **Documentation**: https://prismic.io/docs/fields/color
   */
  text_color: prismic.ColorField;

  /**
   * Text Heading Font field in *Page*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: page.text_heading_font
   * - **Tab**: Global Styles
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  text_heading_font: prismic.SelectField<
    "Inter" | "Lora" | "Poppins" | "Roboto Mono"
  >;

  /**
   * Text Body Fonts field in *Page*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: page.text_body_fonts
   * - **Tab**: Global Styles
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  text_body_fonts: prismic.SelectField<
    "Inter" | "Lora" | "Poppins" | "Roboto Mono"
  >;

  /**
   * Text Heading Size (px) field in *Page*
   *
   * - **Field Type**: Number
   * - **Placeholder**: *None*
   * - **API ID Path**: page.text_heading_size
   * - **Tab**: Global Styles
   * - **Documentation**: https://prismic.io/docs/fields/number
   */
  text_heading_size: prismic.NumberField;

  /**
   * Text Body Size (px) field in *Page*
   *
   * - **Field Type**: Number
   * - **Placeholder**: *None*
   * - **API ID Path**: page.text_body_size
   * - **Tab**: Global Styles
   * - **Documentation**: https://prismic.io/docs/fields/number
   */
  text_body_size: prismic.NumberField;

  /**
   * Button Corner Radius (px) field in *Page*
   *
   * - **Field Type**: Number
   * - **Placeholder**: *None*
   * - **API ID Path**: page.button_corner_radius
   * - **Tab**: Global Styles
   * - **Documentation**: https://prismic.io/docs/fields/number
   */
  button_corner_radius: prismic.NumberField /**
   * SEO Title field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: page.seo_title
   * - **Tab**: SEO
   * - **Documentation**: https://prismic.io/docs/fields/text
   */;
  seo_title: prismic.KeyTextField;

  /**
   * SEO Description field in *Page*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: page.seo_description
   * - **Tab**: SEO
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  seo_description: prismic.RichTextField;

  /**
   * OG Image field in *Page*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: page.og_image
   * - **Tab**: SEO
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  og_image: prismic.ImageField<never> /**
   * (Navbar) Links field in *Page*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: page.navbar_links[]
   * - **Tab**: Navbar Content
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */;
  navbar_links: prismic.GroupField<Simplify<PageDocumentDataNavbarLinksItem>>;

  /**
   * (Navbar) Buttons field in *Page*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: page.navbar_buttons[]
   * - **Tab**: Navbar Content
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  navbar_buttons: prismic.GroupField<
    Simplify<PageDocumentDataNavbarButtonsItem>
  > /**
   * (Navbar) Logo Height (px) field in *Page*
   *
   * - **Field Type**: Number
   * - **Placeholder**: *None*
   * - **API ID Path**: page.navbar_logo_height
   * - **Tab**: Navbar Styles
   * - **Documentation**: https://prismic.io/docs/fields/number
   */;
  navbar_logo_height: prismic.NumberField;

  /**
   * (Navbar) Background Color field in *Page*
   *
   * - **Field Type**: Color
   * - **Placeholder**: *None*
   * - **API ID Path**: page.navbar_background_color
   * - **Tab**: Navbar Styles
   * - **Documentation**: https://prismic.io/docs/fields/color
   */
  navbar_background_color: prismic.ColorField;

  /**
   * (Navbar) Button Color field in *Page*
   *
   * - **Field Type**: Color
   * - **Placeholder**: *None*
   * - **API ID Path**: page.navbar_button_color
   * - **Tab**: Navbar Styles
   * - **Documentation**: https://prismic.io/docs/fields/color
   */
  navbar_button_color: prismic.ColorField;

  /**
   * (Navbar) Button Text Color field in *Page*
   *
   * - **Field Type**: Color
   * - **Placeholder**: *None*
   * - **API ID Path**: page.navbar_button_text_color
   * - **Tab**: Navbar Styles
   * - **Documentation**: https://prismic.io/docs/fields/color
   */
  navbar_button_text_color: prismic.ColorField;

  /**
   * (Navbar) Text Color field in *Page*
   *
   * - **Field Type**: Color
   * - **Placeholder**: *None*
   * - **API ID Path**: page.navbar_text_color
   * - **Tab**: Navbar Styles
   * - **Documentation**: https://prismic.io/docs/fields/color
   */
  navbar_text_color: prismic.ColorField;

  /**
   * (Navbar) Text Size field in *Page*
   *
   * - **Field Type**: Number
   * - **Placeholder**: *None*
   * - **API ID Path**: page.navbar_text_size
   * - **Tab**: Navbar Styles
   * - **Documentation**: https://prismic.io/docs/fields/number
   */
  navbar_text_size: prismic.NumberField;

  /**
   * (Navbar) Text Font field in *Page*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: page.navbar_text_font
   * - **Tab**: Navbar Styles
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  navbar_text_font: prismic.SelectField<
    "Inter" | "Lora" | "Poppins" | "Roboto Mono"
  >;

  /**
   * (Navbar) Button Corner Radius (px) field in *Page*
   *
   * - **Field Type**: Number
   * - **Placeholder**: *None*
   * - **API ID Path**: page.navbar_button_corner_radius
   * - **Tab**: Navbar Styles
   * - **Documentation**: https://prismic.io/docs/fields/number
   */
  navbar_button_corner_radius: prismic.NumberField;
}

/**
 * Page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<PageDocumentData>, "page", Lang>;

export type AllDocumentTypes = PageDocument;

/**
 * Primary content in *Cta → Default → Primary*
 */
export interface CtaSliceDefaultPrimary {
  /**
   * Title field in *Cta → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: cta.default.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Description field in *Cta → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: cta.default.primary.description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * Button Link field in *Cta → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: cta.default.primary.button_link
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  button_link: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;

  /**
   * Side Image field in *Cta → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: cta.default.primary.side_image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  side_image: prismic.ImageField<never>;
}

/**
 * Default variation for Cta Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CtaSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<CtaSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *Cta → With Background Image → Primary*
 */
export interface CtaSliceWithBackgroundImagePrimary {
  /**
   * Title field in *Cta → With Background Image → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: cta.withBackgroundImage.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Description field in *Cta → With Background Image → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: cta.withBackgroundImage.primary.description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * Button Link field in *Cta → With Background Image → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: cta.withBackgroundImage.primary.button_link
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  button_link: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;

  /**
   * Background Image field in *Cta → With Background Image → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: cta.withBackgroundImage.primary.background_image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  background_image: prismic.ImageField<never>;
}

/**
 * With Background Image variation for Cta Slice
 *
 * - **API ID**: `withBackgroundImage`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CtaSliceWithBackgroundImage = prismic.SharedSliceVariation<
  "withBackgroundImage",
  Simplify<CtaSliceWithBackgroundImagePrimary>,
  never
>;

/**
 * Slice variation for *Cta*
 */
type CtaSliceVariation = CtaSliceDefault | CtaSliceWithBackgroundImage;

/**
 * Cta Shared Slice
 *
 * - **API ID**: `cta`
 * - **Description**: Cta
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CtaSlice = prismic.SharedSlice<"cta", CtaSliceVariation>;

/**
 * Primary content in *Hero → Default → Primary*
 */
export interface HeroSliceDefaultPrimary {
  /**
   * Title field in *Hero → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Description field in *Hero → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * Button Link field in *Hero → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.button_link
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  button_link: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;

  /**
   * Side Image field in *Hero → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.default.primary.side_image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  side_image: prismic.ImageField<never>;
}

/**
 * Default variation for Hero Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeroSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *Hero → With Background Image → Primary*
 */
export interface HeroSliceWithBackgroundImagePrimary {
  /**
   * Title field in *Hero → With Background Image → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.withBackgroundImage.primary.title
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Description field in *Hero → With Background Image → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.withBackgroundImage.primary.description
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;

  /**
   * Button Link field in *Hero → With Background Image → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.withBackgroundImage.primary.button_link
   * - **Documentation**: https://prismic.io/docs/fields/link
   */
  button_link: prismic.LinkField<
    string,
    string,
    unknown,
    prismic.FieldState,
    never
  >;

  /**
   * Background Image field in *Hero → With Background Image → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero.withBackgroundImage.primary.background_image
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  background_image: prismic.ImageField<never>;
}

/**
 * With Background Image variation for Hero Slice
 *
 * - **API ID**: `withBackgroundImage`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSliceWithBackgroundImage = prismic.SharedSliceVariation<
  "withBackgroundImage",
  Simplify<HeroSliceWithBackgroundImagePrimary>,
  never
>;

/**
 * Slice variation for *Hero*
 */
type HeroSliceVariation = HeroSliceDefault | HeroSliceWithBackgroundImage;

/**
 * Hero Shared Slice
 *
 * - **API ID**: `hero`
 * - **Description**: Hero
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type HeroSlice = prismic.SharedSlice<"hero", HeroSliceVariation>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      PageDocument,
      PageDocumentData,
      PageDocumentDataSlicesSlice,
      PageDocumentDataNavbarLinksItem,
      PageDocumentDataNavbarButtonsItem,
      AllDocumentTypes,
      CtaSlice,
      CtaSliceDefaultPrimary,
      CtaSliceWithBackgroundImagePrimary,
      CtaSliceVariation,
      CtaSliceDefault,
      CtaSliceWithBackgroundImage,
      HeroSlice,
      HeroSliceDefaultPrimary,
      HeroSliceWithBackgroundImagePrimary,
      HeroSliceVariation,
      HeroSliceDefault,
      HeroSliceWithBackgroundImage,
    };
  }
}
